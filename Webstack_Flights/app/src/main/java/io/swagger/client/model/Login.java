/*
 * Webstack Flights API
 * # Introduction Mocked flights responses for an e-commerce system  # Overview This is a REST JSON API for developing new Frontend apps at Rethink  # Authentication Some endpoints require authentication. You should use the \"Authorization\" header in POST requests, containing the token received from the /login request.  # Error Codes 400 - Bad input 401 - Not logged in 404 - Not found 500 - Server error Response body will be an explanation  # Usage Saved data will be cleared after 1 hour Server is on Heroku Hobby so it sleeps most of the time
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Login
 */

public class Login {
  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

  public Login username(String username) {
    this.username = username;
    return this;
  }

   /**
   * A username string
   * @return username
  **/
  @ApiModelProperty(example = "admin", required = true, value = "A username string")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public Login password(String password) {
    this.password = password;
    return this;
  }

   /**
   * A password (username + @123)
   * @return password
  **/
  @ApiModelProperty(example = "admin@123", required = true, value = "A password (username + @123)")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Login login = (Login) o;
    return Objects.equals(this.username, login.username) &&
        Objects.equals(this.password, login.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Login {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

